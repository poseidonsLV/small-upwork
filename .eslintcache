[{"D:\\upworkclone\\upwork-clone\\src\\index.js":"1","D:\\upworkclone\\upwork-clone\\src\\App.js":"2","D:\\upworkclone\\upwork-clone\\src\\reportWebVitals.js":"3","D:\\upworkclone\\upwork-clone\\src\\components\\Header.js":"4","D:\\upworkclone\\upwork-clone\\src\\components\\Jobs.js":"5","D:\\upworkclone\\upwork-clone\\src\\components\\MobileHeader.js":"6","D:\\upworkclone\\upwork-clone\\src\\components\\JobPost.js":"7","D:\\upworkclone\\upwork-clone\\src\\datas\\JobTags.js":"8","D:\\upworkclone\\upwork-clone\\src\\Redux\\store.js":"9","D:\\upworkclone\\upwork-clone\\src\\Redux\\index.js":"10","D:\\upworkclone\\upwork-clone\\src\\Redux\\reducers\\Jobs.js":"11","D:\\upworkclone\\upwork-clone\\src\\Redux\\actions.js":"12","D:\\upworkclone\\upwork-clone\\src\\components\\Job.js":"13","D:\\upworkclone\\upwork-clone\\src\\components\\MoreAboutJob.js":"14"},{"size":711,"mtime":1610930751181,"results":"15","hashOfConfig":"16"},{"size":639,"mtime":1611350121334,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":2160,"mtime":1611350036773,"results":"19","hashOfConfig":"16"},{"size":1364,"mtime":1611262231994,"results":"20","hashOfConfig":"16"},{"size":2795,"mtime":1611350613455,"results":"21","hashOfConfig":"16"},{"size":6433,"mtime":1611259491674,"results":"22","hashOfConfig":"16"},{"size":258,"mtime":1610845097630,"results":"23","hashOfConfig":"16"},{"size":305,"mtime":1610930461112,"results":"24","hashOfConfig":"16"},{"size":405,"mtime":1611253962789,"results":"25","hashOfConfig":"16"},{"size":847,"mtime":1611255497495,"results":"26","hashOfConfig":"16"},{"size":734,"mtime":1611261964928,"results":"27","hashOfConfig":"16"},{"size":2392,"mtime":1611350473751,"results":"28","hashOfConfig":"16"},{"size":3227,"mtime":1611350946018,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"q6tdtn",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\upworkclone\\upwork-clone\\src\\index.js",[],["61","62"],"D:\\upworkclone\\upwork-clone\\src\\App.js",[],"D:\\upworkclone\\upwork-clone\\src\\reportWebVitals.js",[],"D:\\upworkclone\\upwork-clone\\src\\components\\Header.js",[],"D:\\upworkclone\\upwork-clone\\src\\components\\Jobs.js",["63","64","65"],"import React, { useEffect } from \"react\";\r\nimport \"../styles/Jobs.css\";\r\nimport Job from \"./Job\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postJob } from \"../Redux/actions\";\r\n\r\nfunction Jobs() {\r\n  const jobs = useSelector((state) => state.jobs);\r\n\r\n  return (\r\n    <div className=\"jobs\">\r\n      <div className=\"jobs-header\">\r\n        <h2>Browse freelance jobs</h2>\r\n        {/* <div className=\"jobs-sort\">\r\n          <p>Sort:</p>\r\n          <select>\r\n            <option>Most Relevant</option>\r\n            <option>Newest</option>\r\n          </select>\r\n        </div> */}\r\n      </div>\r\n      {jobs.length < 1 && (\r\n        <div\r\n          style={{ textAlign: \"center\", fontSize: \"25px\", marginTop: \"50px\" }}\r\n        >\r\n          <h2>NO JOBS FOUND</h2>\r\n        </div>\r\n      )}\r\n      {jobs.map((job) => (\r\n        <div key={job.id}>\r\n          <Job\r\n            id={job.id}\r\n            jobDesc={job.jobDesc}\r\n            jobTitle={job.jobTitle}\r\n            jobWorkflow={job.jobWorkflow}\r\n            jobFixedPrice={job.jobFixedPrice}\r\n            jobHours={job.jobHours}\r\n            jobHourlyPrice={job.jobHourlyPrice}\r\n            jobDuration={job.jobDuration}\r\n            jobReqExperience={job.jobReqExperience}\r\n            tags={job.tags}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jobs;\r\n","D:\\upworkclone\\upwork-clone\\src\\components\\MobileHeader.js",["66","67","68","69"],"D:\\upworkclone\\upwork-clone\\src\\components\\JobPost.js",["70","71"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/JobPost.css\";\r\nimport jobTags from \"../datas/JobTags\";\r\nimport _ from \"lodash\";\r\nimport { postJob } from \"../Redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction JobPost() {\r\n  const jobs = useSelector((state) => state.jobs);\r\n  const dispatch = useDispatch();\r\n  const [tags, setTags] = useState([]);\r\n  const [jobDesc, setJobDesc] = useState(\"\");\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  const [jobWorkflow, setJobWorkflow] = useState(\"\");\r\n  const [jobFixedPrice, setJobFixedPrice] = useState(\"\");\r\n  const [jobHours, setJobHours] = useState(\"\");\r\n  const [jobHourlyPrice, setJobHourlyPrice] = useState(\"\");\r\n  const [jobDuration, setJobDuration] = useState(\"\");\r\n  const [jobReqExperience, setJobReqExperience] = useState(\"\");\r\n  const [jobProjectType, setJobProjectType] = useState(\"\");\r\n\r\n  function chooseTags(id, value) {\r\n    if (_.find(tags, { id: id, tag: value })) {\r\n      let filteredTags = tags.filter((tag) => tag.id !== id);\r\n      return setTags(filteredTags);\r\n    }\r\n    let newTag = [...tags, { id: id, tag: value }];\r\n    setTags(newTag);\r\n  }\r\n\r\n  function activateTag(id, value) {\r\n    if (_.find(tags, { id: id, tag: value })) {\r\n      return \"active\";\r\n    } else {\r\n      return \"nothing\";\r\n    }\r\n  }\r\n\r\n  function submitJob() {\r\n    dispatch(\r\n      postJob(\r\n        jobDesc || \"Not Defined\",\r\n        jobTitle || \"Not Defined\",\r\n        jobWorkflow || \"Not Defined\",\r\n        jobFixedPrice || \"Not Defined\",\r\n        jobHours || \"Not Defined\",\r\n        jobHourlyPrice || \"Not Defined\",\r\n        jobDuration || \"Not Defined\",\r\n        jobReqExperience || \"Not Defined\",\r\n        jobProjectType || \"Not Defined\",\r\n        tags || \"Not Defined\"\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"jobPost\">\r\n      <div className=\"jobPost-header\">\r\n        <h2>Create job post</h2>\r\n      </div>\r\n      <div div className=\"jobPost-container\">\r\n        <div className=\"jobPost-title\">\r\n          <p>Enter title of job</p>\r\n          <input\r\n            value={jobTitle}\r\n            onChange={(e) => setJobTitle(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Job Title\"\r\n          />\r\n        </div>\r\n        <div className=\"jobPost-description\">\r\n          <p>Enter description of job</p>\r\n          <textarea\r\n            onChange={(e) => setJobDesc(e.target.value)}\r\n            required\r\n            maxLength={1000}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"jobPost-projectType\">\r\n          <p>Choose project type</p>\r\n          <select onChange={(e) => setJobProjectType(e.target.value)}>\r\n            <option value={false}>Choose project type</option>\r\n            <option value=\"One-time project\">One-time project</option>\r\n            <option value=\"Ongoing project\">Ongoing project</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"jobPost-workflow\">\r\n          <p>Choose client job workflow</p>\r\n          <select onChange={(e) => setJobWorkflow(e.target.value)}>\r\n            <option value={false}>Choose job workflow</option>\r\n            <option value=\"fixedFlow\">Fixed Price</option>\r\n            <option value=\"hourlyFlow\">Hourly Price</option>\r\n          </select>\r\n        </div>\r\n        {jobWorkflow === \"hourlyFlow\" && (\r\n          <div className=\"jobPost-hoursWeek\">\r\n            <p>Choose client weekly hours</p>\r\n            <select onChange={(e) => setJobHours(e.target.value)}>\r\n              <option value={false}>Choose job hours per week</option>\r\n              <option value=\"30+ hrs/week\">30+ hrs/week</option>\r\n              <option value=\"10-30 hrs/week\">10-30 hrs/week</option>\r\n              <option value=\"Less than 10 hrs/week\">\r\n                Less than 10 hrs/week\r\n              </option>\r\n              <option value=\"Hours to be determined\">\r\n                Hours to be determined\r\n              </option>\r\n            </select>\r\n          </div>\r\n        )}\r\n        {jobWorkflow === \"fixedFlow\" && (\r\n          <div className=\"jobPost-fixedPrice\">\r\n            <p>Choose client fixed price</p>\r\n            <input\r\n              value={jobFixedPrice}\r\n              onChange={(e) => setJobFixedPrice(e.target.value)}\r\n              type=\"number\"\r\n              placeholder=\"Enter Fixed Price\"\r\n            />\r\n          </div>\r\n        )}\r\n        {jobWorkflow === \"hourlyFlow\" && (\r\n          <div className=\"jobPost-hourlyPrice\">\r\n            <p>Choose client hourly price</p>\r\n            <input\r\n              value={jobHourlyPrice}\r\n              onChange={(e) => setJobHourlyPrice(e.target.value)}\r\n              type=\"number\"\r\n              placeholder=\"Enter Hourly Price\"\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"jobPost-duration\">\r\n          <p>Choose client job duration</p>\r\n          <select\r\n            onChange={(e) => {\r\n              setJobDuration(e.target.value);\r\n            }}\r\n          >\r\n            <option value={false}>Choose duration</option>\r\n            <option value={\"Less than 1 month\"}>Less than 1 month</option>\r\n            <option value={\"1 to 3 months\"}>1 to 3 months</option>\r\n            <option value={\"More than 6 months\"}>More than 6 months</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"jobPost-expLevel\">\r\n          <p>Choose client experience level</p>\r\n          <select onChange={(e) => setJobReqExperience(e.target.value)}>\r\n            <option value={false}>Choose level</option>\r\n            <option value=\"Entry Level\">Entry level</option>\r\n            <option value=\"Intermediate level\">Intermediate level</option>\r\n            <option value=\"Expert level\">Expert level</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"jobPost-tags\">\r\n          {jobTags &&\r\n            jobTags.map((tag) => {\r\n              return (\r\n                <p\r\n                  onClick={() => chooseTags(tag.id, tag.tag)}\r\n                  key={tag.id}\r\n                  className=\"jobPost-tags-item\"\r\n                  id={`${activateTag(tag.id, tag.tag)}`}\r\n                >\r\n                  {tag.tag}\r\n                </p>\r\n              );\r\n            })}\r\n        </div>\r\n        <div className=\"jobPost-postJob\">\r\n          <button onClick={submitJob}>Submit job post</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobPost;\r\n","D:\\upworkclone\\upwork-clone\\src\\datas\\JobTags.js",[],"D:\\upworkclone\\upwork-clone\\src\\Redux\\store.js",[],"D:\\upworkclone\\upwork-clone\\src\\Redux\\index.js",[],"D:\\upworkclone\\upwork-clone\\src\\Redux\\reducers\\Jobs.js",[],"D:\\upworkclone\\upwork-clone\\src\\Redux\\actions.js",[],"D:\\upworkclone\\upwork-clone\\src\\components\\Job.js",["72"],"D:\\upworkclone\\upwork-clone\\src\\components\\MoreAboutJob.js",["73","74","75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"85","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":21},{"ruleId":"81","severity":1,"message":"86","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":56,"column":11,"nodeType":"89","endLine":56,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":57,"column":11,"nodeType":"89","endLine":57,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":58,"column":11,"nodeType":"89","endLine":58,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":59,"column":11,"nodeType":"89","endLine":59,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"90","line":9,"column":9,"nodeType":"83","messageId":"84","endLine":9,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":17,"column":6,"nodeType":"93","endLine":17,"endColumn":8,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":20,"column":20,"nodeType":"97","messageId":"98","endLine":20,"endColumn":22},{"ruleId":"81","severity":1,"message":"99","line":28,"column":5,"nodeType":"83","messageId":"84","endLine":28,"endColumn":7},{"ruleId":"81","severity":1,"message":"100","line":38,"column":5,"nodeType":"83","messageId":"84","endLine":38,"endColumn":9},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'postJob' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'jobs' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJobData'. Either include it or remove the dependency array.","ArrayExpression",["103"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'id' is assigned a value but never used.","'tags' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [getJobData]",{"range":"106","text":"107"},[496,498],"[getJobData]"]